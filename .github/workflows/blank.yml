# This is a basic workflow to help you get started with Actions

name: blank1


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main", "devel_workflow" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      set_this:
        description: "GUI_name"
        default: "some string"
        type: string
        required: true

env:
  # set global environment variables

  # import secrets - LF: I prefer the visibility of loading these globally
  my_test_secret: ${{ secrets.my_first_secret }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo CICD script should include self-tests and be paranoid about detecting errors

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo CICD script should include self-tests and be paranoid about detecting errors
          echo
          echo "CICD can easily fail because of typos = \$\{\{secrets.my_first_secretXX\}\} "
          echo "CICD can easily fail because of typos = ${{secrets.my_first_secretXX}}"
          echo 
          echo WARNING: Its easy to expose secret values 
          echo Only a few developers should have access to CICD code
          echo The following values are exposed simply by reversing the strings
          echo my_test_secret=`echo ${{secrets.my_first_secret}} |rev`
          echo GITHUB_TOKEN=`echo ${{secrets.GITHUB_TOKEN}} |rev`
          echo
          env | sort
        env:
          A_new_var: hello_larry
          A_test_secret2: ${{ secrets.my_first_secret }}
          A_GITHUB_TOKEN:  ${{secrets.GITHUB_TOKEN}} 
          
  build3:
    needs: build1
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-liner
        run: env |sort
        
  build2:
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-liner
        run: env |sort
